#!/bin/bash

readonly STORAGE_PATH=/var/lib/connman
readonly SCAN_RESULT=$(mktemp) || exit
trap 'rm -f $SCAN_RESULT' EXIT

[[ "$1" == "scan" ]] && scan=1 || scan=0

get_services() {
    connmanctl enable wifi &>/dev/null
    (( scan )) && timeout 5 connmanctl scan wifi &>/dev/null
    connmanctl services | cut -c 5- | rev | sed -r 's/([^\s+])\s+(.*)/\1\t\2/' | rev >$SCAN_RESULT
}

index_to_name() {
    awk -v line="$1" 'NR == line { print $1 }' $SCAN_RESULT
}

index_to_service() {
    awk -v line="$1" 'NR == line { print $2 }' $SCAN_RESULT
}

id_to_security() {
    cut -d _ -f 5 <<<"$1"
}

is_connected() {
  state=$(connmanctl services "$1" | awk '$1 == "State" { print $3 }')
  [[ ! "$state" =~ ^(idle|failure)$ ]]
}

create_dmenu() {
    local order=1
    local name
    local id
    local security
    local disconnect
    while IFS=$'\t' read -r name id; do
        security=''
        disconnect=''
        is_connected "$id" && disconnect='(disconnect)'
        case "$id" in
            wifi_*) security="$(id_to_security "$id")" ;;
            vpn_*) security=vpn ;;
        esac
        printf '%2s  %-40s%9s %s\n' "$order" "$name" "$security" "$disconnect"
        (( order++ ))
    done <$SCAN_RESULT
}

get_services
index="$(create_dmenu | dmenu -l 10 -i -p 'Select network' | sed 's/^ *//g' | cut -d ' ' -f 1)"

name="$(index_to_name "$index")"
id="$(index_to_service "$index")"
[ -z "$id" ] && exit 1

if is_connected "$id"; then
    connmanctl disconnect "$id"
    exit 0
fi

connman_msg="$(timeout 10 connmanctl connect "$id" 2>&1 | head -n 1)"
if [[ "$connman_msg" != Connected* ]]; then
    error_msg='Timeout connecting to network'
    [[ "$connman_msg" ]] && error_msg="$(cut -d ' ' -f 3- <<<"$connman_msg")"
    notify-send -u critical "Unable to connect to \"$name\"" "$error_msg"
fi
